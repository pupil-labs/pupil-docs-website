{"remainingRequest":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/index.js??ref--1-1!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/src/pupil-hardware/hardware-dev.md?vue&type=template&id=ac859a24&","dependencies":[{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/src/pupil-hardware/hardware-dev.md","mtime":1562305498269},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js","mtime":1561001169716},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1561001169891},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js","mtime":1561001169716},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/index.js","mtime":1561001169891},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/@vuepress/markdown-loader/index.js","mtime":1562298817231}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJwdXBpbC1oYXJkd2FyZS1kZXZlbG9wbWVudCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogIiNwdXBpbC1oYXJkd2FyZS1kZXZlbG9wbWVudCIsCiAgICAgICAgICAgICAgImFyaWEtaGlkZGVuIjogInRydWUiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBQdXBpbCBIYXJkd2FyZSBEZXZlbG9wbWVudCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoaXMgcGFnZSBjb250YWlucyBkb2N1bWVudGF0aW9uIGFuZCBkaXNjdXNzaW9uIG9uIG9wZW4gc291cmNlIGNhbWVyYSBtb3VudHMsIG9wdGljcywgYW5kIGNhbWVyYXMuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiY2FtZXJhLW1vdW50cyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjY2FtZXJhLW1vdW50cyIsICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgQ2FtZXJhIE1vdW50cyIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiAiL2ltYWdlcy9wdXBpbC1oYXJkd2FyZS9leHBsb19zaWRlXzgwMF9tb3VudHMud2VicCIsCiAgICAgICAgICBhbHQ6ICJIZWFkc2V0IGNhbWVyYSBtb3VudHMiCiAgICAgICAgfQogICAgICB9KSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJXZSByZWxlYXNlIHRoZSBDQUQgZmlsZXMgZm9yIHRoZSBjYW1lcmEgbW91bnRzIGZvciB5b3UgdG8gZG93bmxvYWQsIG1vZGlmeSwgaW4gYWNjb3JkYW5jZSB3aXRoIG91ciAiCiAgICAgICAgKSwKICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiNsaWNlbnNlIiB9IH0sIFtfdm0uX3YoImxpY2Vuc2UiKV0pLAogICAgICAgIF92bS5fdigiLiAgQ0FEIGZpbGVzIGZvciB0aGUgZnJhbWUgYXJlIG5vdCBvcGVuIHNvdXJjZTsgIiksCiAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIjaGFyZHdhcmUiIH0gfSwgW192bS5fdigic2VlIGV4cGxhbmF0aW9uIildKSwKICAgICAgICBfdm0uX3YoIi4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW19jKCJzdHJvbmciLCBbX3ZtLl92KCJJbnRlcmZhY2UgRG9jdW1lbnRhdGlvbiIpXSldKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJCeSByZWxlYXNpbmcgdGhlIG1vdW50cyBhcyBleGFtcGxlIGdlb21ldHJ5IHdlIGF1dG9tYXRpY2FsbHkgZG9jdW1lbnQgdGhlIGludGVyZmFjZS4gWW91IGNhbiB1c2UgdGhlIENBRCBmaWxlcyB0byB0YWtlIG1lYXN1cmVtZW50cyBhbmQgbWFrZSB5b3VyIG93biBtb3VudHMuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiYXNpZGUiLCB7IHN0YXRpY0NsYXNzOiAibm90aWNlIiB9LCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlxuTm90ZSAtIFRoZSB0b2xlcmFuY2VzIG1heSBuZWVkIHRvIGJlIGNoYW5nZWQgZm9yIHlvdXIgbWF0ZXJpYWwgb3IgZmFicmljYXRpb24gcHJvY2Vzcy5cbiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImg0IiwgeyBhdHRyczogeyBpZDogImNvbXBhdGliaWxpdHkiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2NvbXBhdGliaWxpdHkiLCAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIENvbXBhdGliaWxpdHkiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgbW91bnRzIHdlcmUgZGV2ZWxvcGVkIGFzIHBhcnQgb2YgdGhlIHdob2xlIGhlYWRzZXQgYW5kIGNhcnJ5IHRoZSByZXZpc2lvbiBudW1iZXIgb2YgdGhlIGhlYWRzZXQgdGhleSB3ZXJlIGRlc2lnbmVkIGZvci4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoNCIsIHsgYXR0cnM6IHsgaWQ6ICJkb3dubG9hZC1jYW1lcmEtbW91bnQtY2FkLWZpbGVzIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBocmVmOiAiI2Rvd25sb2FkLWNhbWVyYS1tb3VudC1jYWQtZmlsZXMiLAogICAgICAgICAgICAgICJhcmlhLWhpZGRlbiI6ICJ0cnVlIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgRG93bmxvYWQgQ2FtZXJhIE1vdW50IENBRCBGaWxlcyIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KCJBbGwgZmlsZXMgYXJlIGhvc3RlZCBpbiB0aGUgIiksCiAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCJwdXBpbC1oYXJkd2FyZS1kaXkiKV0pLAogICAgICAgIF92bS5fdigiIHJlcG8gIiksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vZ2l0aHViLmNvbS9wdXBpbC1sYWJzL3B1cGlsLWhhcmR3YXJlLWRpeSIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiaGVyZSIpLCBfYygiT3V0Ym91bmRMaW5rIildLAogICAgICAgICAgMQogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFtfdm0uX3YoIllvdSBjYW4gY2xvbmUgdGhlIGxhdGVzdCByZXZpc2lvbiIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IiB9IH0sIFsKICAgICAgICAgIF9jKCJjb2RlIiwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgImdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vcHVwaWwtbGFicy9wdXBpbC1oYXJkd2FyZS1kaXkuZ2l0XG4iCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJPciwgaWYgeW91IHdhbnQgYW4gb2xkZXIgdmVyc2lvbiwganVzdCBjaGVja291dCBhbiBvbGRlciB2ZXJzaW9uLiAgSW4gdGhpcyBleGFtcGxlLCB3ZSBjaGVja291dCAiCiAgICAgICAgKSwKICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoInJldjAwNiIpXSksCiAgICAgICAgX3ZtLl92KCIgcmV2MDA2IHdpdGggdGhlIGdpdCB2ZXJzaW9uIGlkIG9mICIpLAogICAgICAgIF9jKCJjb2RlIiwgW192bS5fdigiNmFkNDljNjA2NmQ1IildKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogImxhbmd1YWdlLXRleHQiIH0gfSwgWwogICAgICAgICAgX2MoImNvZGUiLCBbCiAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAiZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9wdXBpbC1sYWJzL3B1cGlsLWhhcmR3YXJlLWRpeS5naXRcbmdpdCBjaGVja291dCA2YWQ0OWM2MDY2ZDVcbiIKICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}