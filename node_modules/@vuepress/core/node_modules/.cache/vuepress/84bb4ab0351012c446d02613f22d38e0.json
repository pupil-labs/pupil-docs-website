{"remainingRequest":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/index.js??ref--1-1!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/src/developer-docs/usb-bandwidth-sync.md?vue&type=template&id=c5e1aa16&","dependencies":[{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/src/developer-docs/usb-bandwidth-sync.md","mtime":1562305498245},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js","mtime":1561001169716},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1561001169891},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js","mtime":1561001169716},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/index.js","mtime":1561001169891},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/@vuepress/markdown-loader/index.js","mtime":1562298817231},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js","mtime":1561001169716},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1561001169891},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js","mtime":1561001169716},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/index.js","mtime":1561001169891},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/@vuepress/markdown-loader/index.js","mtime":1562298817231}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJ1c2ItYmFuZHdpZHRoLWFuZC1zeW5jaHJvbml6YXRpb24iIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6ICIjdXNiLWJhbmR3aWR0aC1hbmQtc3luY2hyb25pemF0aW9uIiwKICAgICAgICAgICAgICAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFVTQiBCYW5kd2lkdGggQW5kIFN5bmNocm9uaXphdGlvbiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoCiAgICAgICAgImgzIiwKICAgICAgICB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBpZDogInVzYi1iYW5kd2lkdGgtbGltaXRzLWFuZC13YXlzLXRvLW1ha2UtaXQtd29yay1yZWdhcmRsZXNzIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICIjdXNiLWJhbmR3aWR0aC1saW1pdHMtYW5kLXdheXMtdG8tbWFrZS1pdC13b3JrLXJlZ2FyZGxlc3MiLAogICAgICAgICAgICAgICAgImFyaWEtaGlkZGVuIjogInRydWUiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgICApLAogICAgICAgICAgX3ZtLl92KCIgVVNCIEJhbmR3aWR0aCBsaW1pdHMgYW5kIHdheXMgdG8gbWFrZSBpdCB3b3JrIHJlZ2FyZGxlc3MiKQogICAgICAgIF0KICAgICAgKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgUHVwaWwgaGVhZHNldCB1c2VzIDItMyBjYW1lcmFzIHRoYXQgYXJlIGVsZWN0cmljYWxseS0gYW5kIGZpcm13YXJlIHdpc2UgaWRlbnRpY2FsIChleGNlcHQgZm9yIHRoZSBuYW1lIGluIHRoZSB1c2IgZGVzY3JpcHRvcikuIE91ciBQdXBpbCBjYW1lcmEgY2FuIHN1cHBseSBmcmFtZXMgaW4gdmFyaW91cyByZXNvbHV0aW9ucyBhbmQgcmF0ZXMgdW5jb21wcmVzc2VkIChZVVYpIGFuZCBjb21wcmVzc2VkIChNSlBFRykuIFdoZW4gbG9va2luZyBhdCB1bmNvbXByZXNzZWQgZGF0YSBldmVuIGEgc2luZ2xlIGNhbWVyYSBjYW4gc2F0dXJhdGUgYSBoaWdoIHNwZWVkIFVTQiBidXMuIFRoaXMgaXMgd2h5IHdlIGFsd2F5cyB1c2UgTUpQRUcgY29tcHJlc3Npb246IFdlIGNhbiBzcXVlZXplIHRoZSBkYXRhIG9mIDMgY2FtZXJhcyB0aHJvdWdoIG9uZSBVU0IgYnVzIGJlY2F1c2UgdGhlIGltYWdlIGRhdGEgaXMgY29tcHJlc3NlZCAgYnkgYSBmYWN0b3Igb2YgfjEwLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoCiAgICAgICAgImgzIiwKICAgICAgICB7IGF0dHJzOiB7IGlkOiAianBlZy1zaXplLWVzdGltYXRpb24tYW5kLWN1c3RvbS12aWRlby1iYWNrZW5kcyIgfSB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOiAiI2pwZWctc2l6ZS1lc3RpbWF0aW9uLWFuZC1jdXN0b20tdmlkZW8tYmFja2VuZHMiLAogICAgICAgICAgICAgICAgImFyaWEtaGlkZGVuIjogInRydWUiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgICApLAogICAgICAgICAgX3ZtLl92KCIgSlBFRyBzaXplIGVzdGltYXRpb24gYW5kIGN1c3RvbSB2aWRlbyBiYWNrZW5kcyIpCiAgICAgICAgXQogICAgICApLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkhvd2V2ZXIsIHRoZSBhY3R1YWwgc2l6ZSBvZiBlYWNoIGltYWdlIGRlcGVuZHMgb24gdGhlIGNvbXBsZXhpdHkgb2YgdGhlIGNvbnRlbnQgIChKUEVHcyBvZiBpbWFnZXMgd2l0aCBtb3JlIGZlYXR1cmVzIHdpbGwgYmUgYmlnZ2VyKSBhbmQgaW1wbGVtZW50YXRpb24gZGV0YWlscyBvZiB0aGUgY2FtZXJhIGZpcm13YXJlLiBCZWNhdXNlIHRoZSBjYW1lcmFzIHVzZSBpc29jaHJvbm91cyB1c2IgdHJhbnNmZXJzLCB3ZSBuZWVkIHRvIGFsbG9jYXRlIGJhbmR3aWR0aCBkdXJpbmcgc3RyZWFtIGluaXRpYWxpemF0aW9uLiBIZXJlIHdlIG5lZWQgdG8gbWFrZSBhbiBlc3RpbWF0ZSBvbiBob3cgbXVjaCBiYW5kd2lkdGggd2UgYmVsaWV2ZSB0aGUgY2FtZXJhIHdpbGwgcmVxdWlyZS4gSWYgd2UgYXJlIHRvbyBjb25zZXJ2YXRpdmUgd2UgcmVxdWlyZSBtb3JlIGJhbmR3aWR0aCBmb3IgMyBjYW1lcmFzIHRoYW4gaXMgYXZhaWxhYmxlIGFuZCBpbml0aWFsaXphdGlvbiB3aWxsIGZhaWwuIElmIHdlIGFsbG9jYXRlIHRvIGxpdHRsZSwgd2UgcmlzayB0aGF0IGltYWdlIHRyYW5zcG9ydCB3aWxsIGZhaWwgZHVyaW5nIGNhcHR1cmUuIEFjY29yZGluZyB0byB0aGUgVVZDIHNwZWNzIHRoZSBhbW91bnQgb2YgYmFuZHdpZHRoIHRoYXQgaXMgcmVxdWlyZWQgbXVzdCBiZSByZWFkIGZyb20gdGhlIGNhbWVyYSB1c2IgZGVzY3JpcHRvciBhbmQgdXN1YWxseSB0aGlzIGVzdGltYXRlIGlzIHN1cGVyIGNvbnNlcnZhdGl2ZS4gVGhpcyBpcyB3aHkgd2l0aCB0aGUgbm9ybWFsIGRyaXZlcnMgeW91IGNhbiBuZXZlciBydW4gbW9yZSB0aGF0IG9uZSBjYW1lcmEgYXQgZGVjZW50IHJlc29sdXRpb25zIG9uIGEgc2luZ2xlIHVzYiBidXMuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiV2l0aCBvdXIgdmVyc2lvbiBvZiBsaWJ1dmMgYW5kIHB5dXZjIHdlIGlnbm9yZSB0aGUgY2FtZXJhcyByZXF1ZXN0IGFuZCBlc3RpbWF0ZSB0aGUgYmFuZHdpZHRoIG91cnNlbHZlcyBsaWtlIHRoaXM6IgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLWMgZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAibGFuZ3VhZ2UtYyIgfSB9LCBbCiAgICAgICAgICBfYygiY29kZSIsIFsKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBjb21tZW50IiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi8vdGhlIHByb3BlciB3YXk6IGFzayB0aGUgY2FtZXJhIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiXG5jb25maWdfYnl0ZXNfcGVyX3BhY2tldCAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBvcGVyYXRvciIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCI9IikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiIHN0cm1oIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gb3BlcmF0b3IiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiLT4iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCJjdXJfY3RybCIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHB1bmN0dWF0aW9uIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi4iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCJkd01heFBheWxvYWRUcmFuc2ZlclNpemUiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBwdW5jdHVhdGlvbiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCI7IikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiXG5cbiIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIGNvbW1lbnQiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiLy8gb3VyIHdheTogZXN0aW1hdGUgaXQ6IikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiXG5zaXplX3QgYmFuZHdpZHRoICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG9wZXJhdG9yIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIj0iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgZnJhbWVfZGVzYyIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG9wZXJhdG9yIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi0+IikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigid1dpZHRoICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG9wZXJhdG9yIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIioiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgZnJhbWVfZGVzYyIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG9wZXJhdG9yIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi0+IikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigid0hlaWdodCAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBvcGVyYXRvciIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCIvIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG51bWJlciIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCI4IikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG9wZXJhdG9yIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIioiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgYmFuZHdpZHRoX2ZhY3RvciIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIHB1bmN0dWF0aW9uIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIjsiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gY29tbWVudCIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgIi8vdGhlIGxhc3Qgb25lIGlzIGJwcCBkZWZhdWx0IDQgYnV0IHdlIHVzZSBpZiBmb3IgY29tcHJlc3Npb24sIDIgaXMgc2F2ZSwgMS41IGlzIG5lZWRlZCB0byBydW4gMyBoaWdoIHNwZWVkIGNhbWVyYXMuIG9uIG9uZSBidXMuIgogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiXG5iYW5kd2lkdGggIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gb3BlcmF0b3IiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiKj0iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gbnVtYmVyIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIjEwMDAwMDAwIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG9wZXJhdG9yIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi8iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgc3RybWgiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBvcGVyYXRvciIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCItPiIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoImN1cl9jdHJsIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gcHVuY3R1YXRpb24iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiLiIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoImR3RnJhbWVJbnRlcnZhbCAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBvcGVyYXRvciIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCIrIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG51bWJlciIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCIxIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gcHVuY3R1YXRpb24iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiOyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIlxuYmFuZHdpZHRoICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG9wZXJhdG9yIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi89IikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG51bWJlciIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCIxMDAwIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gcHVuY3R1YXRpb24iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiOyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBjb21tZW50IiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi8vdW5pdCIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIlxuYmFuZHdpZHRoICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG9wZXJhdG9yIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi89IikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG51bWJlciIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCI4IikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gcHVuY3R1YXRpb24iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiOyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBjb21tZW50IiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi8vIDggaGlnaCBzcGVlZCB1c2IgbWljcm9mcmFtZXMgcGVyIG1zIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiXG5iYW5kd2lkdGggIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gb3BlcmF0b3IiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiKz0iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gbnVtYmVyIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIjEyIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gcHVuY3R1YXRpb24iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiOyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IHByZTogdHJ1ZSwgYXR0cnM6IHsgY2xhc3M6ICJ0b2tlbiBjb21tZW50IiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIi8vaGVhZGVyIHNpemUiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCJcbmNvbmZpZ19ieXRlc19wZXJfcGFja2V0ICIpLAogICAgICAgICAgICBfYygic3BhbiIsIHsgcHJlOiB0cnVlLCBhdHRyczogeyBjbGFzczogInRva2VuIG9wZXJhdG9yIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIj0iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl92KCIgYmFuZHdpZHRoIiksCiAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBwcmU6IHRydWUsIGF0dHJzOiB7IGNsYXNzOiAidG9rZW4gcHVuY3R1YXRpb24iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiOyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIlxuIikKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiVGhlIHNjYWxlIGZhY3RvciBiYW5kd2lkdGhfZmFjdG9yIGlzIHNldHRhYmxlIHRocm91Z2ggdGhlIGFwaS4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJXZSBoYXZlIHRlc3RlZCB0aGVzZSBhbmQgZm91bmQgdGhhdCB3ZSBjYW4gcnVuIDMgcHVwaWwgY2FtZXJhIGF0IDcyMHBANjBmcHMrMng0ODBwQDEyMGZwcyBvbiBvdXIgTWFjIGFuZCBMaW51eCBtYWNoaW5lcy4gSWYgeW91IHBsYXkgd2l0aCB0aGUgcmVzb2x1dGlvbnMgYW5kIGZyYW1lIHJhdGVzIGluIHB1cGlsIGNhcHR1cmUgeW91IG1heSBoaXQgYSBjb21iaW5hdGlvbiB3aGVyZSB0aGUgdG90YWwgYmFuZHdpZHRoIHJlcXVpcmVtZW50cyBjYW5ub3QgYmUgbWV0LCB0aHVzIHRoZSBjcmFzaCAoSSBhc3N1bWUpLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImFzaWRlIiwgeyBzdGF0aWNDbGFzczogIm5vdGljZSIgfSwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJcbk5vdGUgLSBZb3UgbWF5IGhhdmUgb3RoZXIgY29uc3VtZXJzIG9uIHRoZSBzYW1lIFVTQiBidXMgYWxyZWFkeSBzbyB5b3VyIG1pbGFnZSBtYXkgdmFyeSBkZXBlbmRpbmcgb24geW91ciBtYWNoaW5lIGFuZCBzZWxlY3RlZCB1c2IgcGx1ZyBvbiB0aGF0IG1hY2hpbmUuXG4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJ1c2UtbW9yZS1idXMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI3VzZS1tb3JlLWJ1cyIsICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgVXNlIG1vcmUgQlVTIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiSWYgeW91IHdhbnQgdG8gbm90IGJlIGxpbWl0ZWQgYnkgdGhlIGJhbmR3aWR0aCBvZiBhIHNpbmdsZSB1c2IgYnVzLCB5b3UgY2FuIG1vZCB0aGUgaGFyZHdhcmUgYW5kIGV4cG9zZSBldmVyeSBjYW1lcmEgZGlyZWN0bHkuIEp1c3QgbWFrZSBzdXJlIHRoYXQgeW91IGFsc28gaGF2ZSB0aHJlZSBmcmVlIFVTQiBjb250cm9sbGVycyAobm90IHBsdWdzKSBvbiB5b3VyIFBDLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIm11bHRpLWNhbWVyYS1zeW5jaHJvbml6YXRpb24iIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGhyZWY6ICIjbXVsdGktY2FtZXJhLXN5bmNocm9uaXphdGlvbiIsCiAgICAgICAgICAgICAgImFyaWEtaGlkZGVuIjogInRydWUiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBNdWx0aSBDYW1lcmEgU3luY2hyb25pemF0aW9uIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiRWFjaCBjYW1lcmEgd2UgdXNlIGlzIGEgZnJlZSBydW5uaW5nIGNhcHR1cmUgZGV2aWNlLiBBZGRpdGlvbmFsbHkgZWFjaCBjYW1lcmEgcnVucyBpbiBhIHNlcGFyYXRlIHByb2Nlc3MuIEluc3RlYWQgb2YgZnJhbWUtbG9ja2luZyB0aGUgY2FtZXJhIHRocm91Z2ggc3BlY2lhbCBoYXJkd2FyZSB3ZSBhY3F1aXJlIHRpbWVzdGFtcHMgZm9yIGVhY2ggZnJhbWUuIFRoZXNlIHRpbWVzdGFtcHMgYXJlIHRoZW4gdXNlZCB0byBjb3JyZWxhdGUgZGF0YSBmcm9tIGVhY2ggY2FtZXJhIGluIHRpbWUgYW5kIG1hdGNoIGZyYW1lcyBiYXNlZCBvbiBjbG9zZXN0IHByb3hpbWl0eS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJEYXRhIGZyb20gZWFjaCBleWUgY2FtZXJhIGlzIHNlbnQgdmlhIElQQyB0byB0aGUgd29ybGQgcHJvY2Vzcy4gU2luY2UgdGhpcyBpbnZvbHZlcyB0aHJlZSBzZXBhcmF0ZSBwcm9jZXNzZXMgaXQgY2FuIGhhcHBlbiB0aGF0IGRhdGEgZnJvbSBvbmUgY2FtZXJhIGFycml2ZXMgZWFybGllciB0aGF0IGFub3RoZXIuIEhvd2V2ZXIgZm9yIGVhY2ggY2FtZXJhIHRoZSBmcmFtZXMgd2lsbCBiZSBvcmRlcmVkIGFuZCB0aW1lc3RhbXBzIGFyZSBtb25vdG9uaWNhbGx5IGluY3JlYXNpbmcuIEluIHRoZSBtYWluIHByb2Nlc3Mgd2UgbWF0Y2ggdGhlIGF2YWlsYWJsZSBkYXRhIHRpbWV3aXNlIHdoZW4gd2UgbmVlZC4gSW4gUHVwaWwgUGxheWVyIHdlIGNhbiBkbyBtYXRjaGluZyBhZnRlciB0aGUgZmFjdCB0byB3b3JrIHdpdGggcGVyZmVjdGx5IHNvcnRlZCBkYXRhIGZyb20gYWxsIHRocmVlIGNhbWVyYXMuIElmIHlvdSByZXF1aXJlIHRoZSBkYXRhIHRvIGJlIG1hdGNoZWQgb3ZlciBiZWluZyByZWNlbnQgSSB3b3VsZCByZWNvbW1lbmQgY29sbGVjdGluZyBkYXRhIGluIHRoZSBxdWV1ZSBmb3IgYSBmZXcgbW9yZSBmcmFtZXMgaW4gd29ybGQucHkgYmVmb3JlIGRpc3BhdGNoaW5nIHRoZW0gaW4gdGhlIGV2ZW50cyBkaWN0LiAoSSBsbCBhY3R1YWxseSBkbyBzb21lIHRlc3RzIG9uIHRoaXMgc3ViamVjdCBzb29uLikiCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJoMyIsCiAgICAgICAgeyBhdHRyczogeyBpZDogImEtbm90ZS1vbi1zeW5jaHJvbml6YXRpb24tYW5kLXJvbGxpbmctc2h1dHRlcnMiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjogIiNhLW5vdGUtb24tc3luY2hyb25pemF0aW9uLWFuZC1yb2xsaW5nLXNodXR0ZXJzIiwKICAgICAgICAgICAgICAgICJhcmlhLWhpZGRlbiI6ICJ0cnVlIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICAgKSwKICAgICAgICAgIF92bS5fdigiIEEgbm90ZSBvbiBzeW5jaHJvbml6YXRpb24gYW5kIHJvbGxpbmcgc2h1dHRlcnMiKQogICAgICAgIF0KICAgICAgKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJXaGlsZSBzeW5jaHJvbml6YXRpb24gdGhyb3VnaCBoYXJkd2FyZSBpcyBwcmVmZXJhYmxlLCBpdHMgaW1wbGVtZW50YXRpb24gd291bGQgY29tZSBhdCBhZGRlZCBoYXJkd2FyZSBjb3N0LlxuVGhlIGJlbmVmaXRzIG9mIHRoYXQgYmVjb21lIHF1ZXN0aW9uYWJsZSBhdCAxMjBmcHMuIEF0IHRoaXMgcmF0ZSB0aGUgZnJhbWUgaW50ZXJ2YWwgaXMgYWJvdXQgOG1zIHdoaWNoIHZlcnkgY2xvc2UgdG8gdGhlIGV4cG9zdXJlIHRpbWUgb2YgdGhlIGV5ZSBjYW1lcmFzLiBTaW5jZSBvdXIgY2FtZXJhcyB1c2UgYSByb2xsaW5nIHNodXR0ZXIgdGhlIGltYWdlIGlzIGFjdHVhbGx5IHRha2VuIGNvbnRpbnVvdXNseSBhbmQgdGhlIHRpbWUgb2YgZXhwb3N1cmUgY2hhbmdlcyBiYXNlZCBvbiB0aGUgcGl4ZWwgcG9zaXRpb24gb24gdGhlIHNlbnNvci4gWW91IGNhbiB0aGluayBvZiB0aGUgY2FtZXJhIGltYWdlIHN0cmVhbSBhcyBhIHNjYW5uaW5nIHNlbnNvciByZWFkb3V0IHdpdGggZGF0YSBwYWNrZWQgaW50byBmcmFtZXMgYW5kIHRpbWVzdGFtcGVkIHdpdGggdGhlIHRpbWUgb2YgdGhlIGZpcnN0IHBpeGVsIHJlYWRvdXQuIElmIHdlIHRoZW4gbWF0Y2ggZnJhbWVzIGZyb20gdHdvIG9yIG1vcmUgc2Vuc29ycyB3ZSBjYW4gYXNzdW1lIHRoYXQgdGhlIHBpeGVscyBhY3Jvc3MgdHdvIGNhbWVyYSBhcmUgZ2VuZXJhbGx5IG5vIGZ1cnRoZXIgYXBhcnQgaW4gdGltZSB0aGFuIHRoZSBmaXJzdCBhbmQgbGFzdCBwaXhlbCBvZiBvbmUgZnJhbWUgZnJvbSBhIHNpbmdsZSBjYW1lcmEuIgogICAgICAgICkKICAgICAgXSkKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}