{"remainingRequest":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/index.js??ref--1-1!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/src/academic-citation/README.md?vue&type=template&id=7eb88258&","dependencies":[{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/src/academic-citation/README.md","mtime":1562305498197},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js","mtime":1561001169716},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1561001169891},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/cache-loader/dist/cjs.js","mtime":1561001169716},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/vue-loader/lib/index.js","mtime":1561001169891},{"path":"/home/plbkk-monica/Desktop/pupil/other repos/pupil-docs/pupil-docs-website/node_modules/@vuepress/markdown-loader/index.js","mtime":1562298817231}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}